services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        REQUIREMENTS: requirements/local.txt
    ports:
      - "8000:8000"
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.local
    env_file:
      - .env

#  web_prod:
#    build:
#      context: .
#      args:
#        REQUIREMENTS: requirements/production.txt
#    ports:
#      - "8000:8000"
#    environment:
#      DJANGO_SETTINGS_MODULE: config.settings.production
#      command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
#    volumes:
#      - .:/app
#
#  db_production:
#    image: postgres:17-alpine
#    container_name: db_postgres
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
#    ports:
#      - "5432-5432"
#    volumes:
#      - local
#    restart: unless-stopped

  frontend:
    build:
      context: ../allegro-clone-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://web:8000
    volumes:
      - ../allegro-clone-frontend:/app
    depends_on:
      - web

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    environment:
#      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
#    ports:
#      - "3100:3000"
